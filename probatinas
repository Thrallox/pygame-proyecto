 if "ship" self.y <= 0:
    self.y = 0

elif "ship" self.y >= 600 
    self.y = 568 

class Enemy: 
    def __init__(self,x=800, y= random, vx):
        self.x = x 
        self. y = y 
        self.vx= vx 


    def EnemyMovement(self):
       se debe crear una funcion que genere movimientos en x de forma random  
       esta debe devolver el valor para luego incluirla en el loop
       


for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    status = False

                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_UP:
                        self.ship.y += -self.ship.vy
                        
                    if event.key == pygame.K_DOWN:
                        self.ship.y += self.ship.vy
                        
                if event.type == pygame.KEYUP:
                    if event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                        self.ship.y = self.ship.y



'''
            colores =[(0,255,0), (255,255,255)]
            
            tecla_espacio = pygame.font.Font("resources/espacio.ttf",25)
            tecla_espacio_img = tecla_espacio.render("Press <SPACE BAR> in order to continue", False, colores[ix])
            if ix == 0:
                ix = 1
            else:
                ix = 0
            '''
self.screen.blit(tecla_espacio_img, (110,450))


  colores =[(0,255,0), (255,255,255)]
            tecla_espacio = pygame.font.Font("resources/espacio.ttf",25)
            tecla_espacio_img = tecla_espacio.render("Press <SPACE BAR> in order to continue", False, colores[ix])
            ciclosRefresco +=1
            if ciclosRefresco == retardoAnimacion:
                if ix == 0:
                    ix = 1
                else:
                    ix = 0


 or humanity will perish.
            